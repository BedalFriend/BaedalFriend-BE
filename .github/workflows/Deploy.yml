name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

        ## 1) git ignore에 등록된 application.properties 파일 생성해주기
      - name: make ENV
        run: |
          mkdir ./src/main/resources
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./application.properties
        shell: bash

        ## 2) 스프링 프로젝트 jar 파일 빌드
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build

        ## 3) Docker Hub에 이미지 push 하기
            ## 웹 이미지 빌드 및 도커허브에 push
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: web docker build and push
        run: |
          docker build -t kaifazhehj99/finalproject .
          docker push kaifazhehj99/finalproject
        ## 4) Docker Hub에 Push한 이미지를 리눅스 서버에 받아와서 run
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST_ADDRESS }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            docker pull kaifazhehj99/finalproject:latest
            docker stop finalproject
            docker rm finalproject
            docker run -d —rm —name finalproject -p 80:8080 kaifazhehj99/finalproject
